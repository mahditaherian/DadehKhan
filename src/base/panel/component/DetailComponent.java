/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package base.panel.component;

import base.applicator.object.StandardEntity;
import base.applicator.object.detail.DetailField;
import base.applicator.object.detail.DetailValue;
import base.applicator.object.detail.FieldType;
import base.applicator.object.detail.NumericValue;
import base.applicator.object.detail.StringValue;
import base.classification.Category;
import base.util.Word;
import java.awt.ComponentOrientation;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Mahdi
 */
public class DetailComponent extends javax.swing.JPanel {

    /**
     * Creates new form DetailComponent
     */
    public DetailComponent() {
        initComponents();
        detailTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                DefaultTableModel model = (DefaultTableModel) detailTable.getModel();
                DetailField field = (DetailField) model.getValueAt(detailTable.getSelectedRow(), 0);
                DetailValue value = (DetailValue) model.getValueAt(detailTable.getSelectedRow(), 1);
                wordComponent1.setWord(field.getName());
                wordComponent2.setText(value.getValue());
                switch (field.getFieldType()) {
                    case INT:
                    case DOUBLE:
                    case FLOAT:
                    case LONG:
                    case SHORT:

                    //NumericValue value = new NumericValue(WIDTH);
                }
            }
        });
    }

    public void setDetails(List<Category> details) {
        DefaultTableModel model = (DefaultTableModel) detailTable.getModel();
        model.getDataVector().clear();
        for (Category cat : details) {
            for (StandardEntity fieldEntity : cat.getItems()) {
                DetailField field = (DetailField) fieldEntity;
                model.addRow(new Object[]{field, field.getFieldType().equals(FieldType.STRING) ? new StringValue(new Word()) : new NumericValue(0)});
            }
        }
        detailTable.setModel(model);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        addDetailBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        wordComponent1 = new base.panel.component.WordComponent();
        wordComponent2 = new base.panel.component.WordComponent();

        setOpaque(false);

        detailTable.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        detailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "نام خصوصيت", "مقدار"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(detailTable);

        addDetailBtn.setText("افزودن توضیحات");
        addDetailBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDetail(evt);
            }
        });

        jLabel1.setText("نام خصوصیت :");

        jLabel2.setText("مقدار :");

        wordComponent1.setEnabled(false);

        wordComponent2.setMultiline(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(addDetailBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wordComponent2, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(wordComponent1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wordComponent1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addDetailBtn))
                            .addComponent(wordComponent2, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addDetail(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDetail
        Word name = wordComponent1.getWord();
        Word value = wordComponent2.getWord();
        DefaultTableModel model = (DefaultTableModel) detailTable.getModel();
        //model.getDataVector().clear();
        model.addRow(new Word[]{name, value});
    }//GEN-LAST:event_addDetail
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDetailBtn;
    private javax.swing.JTable detailTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private base.panel.component.WordComponent wordComponent1;
    private base.panel.component.WordComponent wordComponent2;
    // End of variables declaration//GEN-END:variables
}
