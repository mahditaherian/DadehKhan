/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package base.panel.component;

import base.panel.PanelViewer;
import base.util.EntityID;
import base.util.GrabPage;
import base.util.Page;
import base.util.Reference;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mahdi
 */
public class ReferenceComponent extends javax.swing.JPanel {

    private Reference selectedReference = null;

    /**
     * Creates new form ReferenceComponent
     */
    public ReferenceComponent() {
        initComponents();
    }

    private void showAddReferencePanel() {
        final AddReferencePanel addReferencePanel = new AddReferencePanel();
        final PanelViewer panelViewer = new PanelViewer(addReferencePanel);
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                panelViewer.setVisible(true);
//                new AddReferencePanel().setVisible(true);
            }
        });

        panelViewer.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent arg0) {
                panelViewer.setVisible(false);
                Reference reference = addReferencePanel.getResult();
                if (reference != null) {
                    ((DefaultComboBoxModel) referencesCombo.getModel()).addElement(reference);
                }
            }
        });

    }

    public void setReferences(Collection<Reference> references) {
        DefaultComboBoxModel model = new DefaultComboBoxModel(references.toArray());
        referencesCombo.setModel(model);
        if (references.iterator().hasNext()) {
            setSelectReference(references.iterator().next());
        }
    }

    public Page getSelectedPage() {
        return (Page) pagesCombo.getModel().getSelectedItem();
    }

    public Reference getSelectedReference() {
        return (Reference) pagesCombo.getModel().getSelectedItem();
    }

    public void setSelectReference(Reference ref) {
        if (ref != null && !ref.equals(selectedReference)) {
            selectedReference = ref;
            referencesCombo.setSelectedItem(ref);
            DefaultComboBoxModel model = new DefaultComboBoxModel(ref.getPages().toArray());
            pagesCombo.setModel(model);
            pagesCombo.repaint();
        }
    }

    /**
     * 
     * @return a list of pair of Page and convert rule id of it
     */
    public List<GrabPage> getReferences() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        List<GrabPage> result = new ArrayList<>();
        for (int i = 0; i < model.getDataVector().size(); i++) {
            Vector row = (Vector)model.getDataVector().elementAt(i);
            //Reference reference = (Reference)  row.elementAt(0);
            Page page = (Page)row.elementAt(1);
            EntityID convertRuleID = (EntityID) row.elementAt(2);
            
            result.add(new GrabPage(page,convertRuleID));
        }
        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        referencesCombo = new javax.swing.JComboBox();
        pagesCombo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        addConvertRuleBtn = new javax.swing.JButton();
        addReferenceBtn = new javax.swing.JButton();

        referencesCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        referencesCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                referencesComboActionPerformed(evt);
            }
        });

        pagesCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("منبع :");

        jLabel2.setText("صفحه :");

        jTextField2.setText("1,2,3");

        jLabel6.setText("کد شیوه های تبديل :");

        jTable1.setComponentOrientation(java.awt.ComponentOrientation.RIGHT_TO_LEFT);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "منبع", "صفحه", "شیوه تبدیل"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("افزودن به لیست");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableEvent(evt);
            }
        });

        addConvertRuleBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addConvertRuleBtn.setForeground(new java.awt.Color(0, 204, 0));
        addConvertRuleBtn.setText("+");
        addConvertRuleBtn.setOpaque(false);

        addReferenceBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addReferenceBtn.setForeground(new java.awt.Color(0, 204, 0));
        addReferenceBtn.setText("+");
        addReferenceBtn.setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addReferenceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pagesCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(referencesCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(addConvertRuleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(referencesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pagesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(addReferenceBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2)
                        .addComponent(jLabel6))
                    .addComponent(addConvertRuleBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void referencesComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_referencesComboActionPerformed
        setSelectReference((Reference) referencesCombo.getSelectedItem());
    }//GEN-LAST:event_referencesComboActionPerformed

    private void addToTableEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableEvent
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{
            referencesCombo.getSelectedItem(),
            pagesCombo.getSelectedItem(),
            new EntityID(Integer.valueOf(jTextField2.getText()))
        });
    }//GEN-LAST:event_addToTableEvent
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConvertRuleBtn;
    private javax.swing.JButton addReferenceBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox pagesCombo;
    private javax.swing.JComboBox referencesCombo;
    // End of variables declaration//GEN-END:variables
}
